/*
 * generated by Xtext 2.19.0
 */
grammar InternalSelenium;

options {
	superClass=AbstractInternalContentAssistParser;
}

@lexer::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

// Hack: Use our own Lexer superclass by means of import. 
// Currently there is no other way to specify the superclass for the lexer.
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.Lexer;
}

@parser::header {
package org.xtext.example.mydsl.ide.contentassist.antlr.internal;

import java.io.InputStream;
import org.eclipse.xtext.*;
import org.eclipse.xtext.parser.*;
import org.eclipse.xtext.parser.impl.*;
import org.eclipse.emf.ecore.util.EcoreUtil;
import org.eclipse.emf.ecore.EObject;
import org.eclipse.xtext.parser.antlr.XtextTokenStream;
import org.eclipse.xtext.parser.antlr.XtextTokenStream.HiddenTokens;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.AbstractInternalContentAssistParser;
import org.eclipse.xtext.ide.editor.contentassist.antlr.internal.DFA;
import org.xtext.example.mydsl.services.SeleniumGrammarAccess;

}
@parser::members {
	private SeleniumGrammarAccess grammarAccess;

	public void setGrammarAccess(SeleniumGrammarAccess grammarAccess) {
		this.grammarAccess = grammarAccess;
	}

	@Override
	protected Grammar getGrammar() {
		return grammarAccess.getGrammar();
	}

	@Override
	protected String getValueForTokenName(String tokenName) {
		return tokenName;
	}
}

// Entry rule entryRuleGlobal
entryRuleGlobal
:
{ before(grammarAccess.getGlobalRule()); }
	 ruleGlobal
{ after(grammarAccess.getGlobalRule()); } 
	 EOF 
;

// Rule Global
ruleGlobal 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGlobalAccess().getProgramsAssignment()); }
		(rule__Global__ProgramsAssignment)*
		{ after(grammarAccess.getGlobalAccess().getProgramsAssignment()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleProgram
entryRuleProgram
:
{ before(grammarAccess.getProgramRule()); }
	 ruleProgram
{ after(grammarAccess.getProgramRule()); } 
	 EOF 
;

// Rule Program
ruleProgram 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getProgramAccess().getGroup()); }
		(rule__Program__Group__0)
		{ after(grammarAccess.getProgramAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleInstruction
entryRuleInstruction
:
{ before(grammarAccess.getInstructionRule()); }
	 ruleInstruction
{ after(grammarAccess.getInstructionRule()); } 
	 EOF 
;

// Rule Instruction
ruleInstruction 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getInstructionAccess().getGroup()); }
		(rule__Instruction__Group__0)
		{ after(grammarAccess.getInstructionAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleGo
entryRuleGo
:
{ before(grammarAccess.getGoRule()); }
	 ruleGo
{ after(grammarAccess.getGoRule()); } 
	 EOF 
;

// Rule Go
ruleGo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getGoAccess().getGroup()); }
		(rule__Go__Group__0)
		{ after(grammarAccess.getGoAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVerify
entryRuleVerify
:
{ before(grammarAccess.getVerifyRule()); }
	 ruleVerify
{ after(grammarAccess.getVerifyRule()); } 
	 EOF 
;

// Rule Verify
ruleVerify 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVerifyAccess().getGroup()); }
		(rule__Verify__Group__0)
		{ after(grammarAccess.getVerifyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleFillText
entryRuleFillText
:
{ before(grammarAccess.getFillTextRule()); }
	 ruleFillText
{ after(grammarAccess.getFillTextRule()); } 
	 EOF 
;

// Rule FillText
ruleFillText 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getFillTextAccess().getGroup()); }
		(rule__FillText__Group__0)
		{ after(grammarAccess.getFillTextAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleVariable
entryRuleVariable
:
{ before(grammarAccess.getVariableRule()); }
	 ruleVariable
{ after(grammarAccess.getVariableRule()); } 
	 EOF 
;

// Rule Variable
ruleVariable 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getVariableAccess().getGroup()); }
		(rule__Variable__Group__0)
		{ after(grammarAccess.getVariableAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleClick
entryRuleClick
:
{ before(grammarAccess.getClickRule()); }
	 ruleClick
{ after(grammarAccess.getClickRule()); } 
	 EOF 
;

// Rule Click
ruleClick 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getClickAccess().getGroup()); }
		(rule__Click__Group__0)
		{ after(grammarAccess.getClickAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleCheck
entryRuleCheck
:
{ before(grammarAccess.getCheckRule()); }
	 ruleCheck
{ after(grammarAccess.getCheckRule()); } 
	 EOF 
;

// Rule Check
ruleCheck 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getCheckAccess().getGroup()); }
		(rule__Check__Group__0)
		{ after(grammarAccess.getCheckAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleSelectCombo
entryRuleSelectCombo
:
{ before(grammarAccess.getSelectComboRule()); }
	 ruleSelectCombo
{ after(grammarAccess.getSelectComboRule()); } 
	 EOF 
;

// Rule SelectCombo
ruleSelectCombo 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getSelectComboAccess().getGroup()); }
		(rule__SelectCombo__Group__0)
		{ after(grammarAccess.getSelectComboAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleElement
entryRuleElement
:
{ before(grammarAccess.getElementRule()); }
	 ruleElement
{ after(grammarAccess.getElementRule()); } 
	 EOF 
;

// Rule Element
ruleElement 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getElementAccess().getGroup()); }
		(rule__Element__Group__0)
		{ after(grammarAccess.getElementAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleBy
entryRuleBy
:
{ before(grammarAccess.getByRule()); }
	 ruleBy
{ after(grammarAccess.getByRule()); } 
	 EOF 
;

// Rule By
ruleBy 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getByAccess().getAlternatives()); }
		(rule__By__Alternatives)
		{ after(grammarAccess.getByAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleByProperty
entryRuleByProperty
:
{ before(grammarAccess.getByPropertyRule()); }
	 ruleByProperty
{ after(grammarAccess.getByPropertyRule()); } 
	 EOF 
;

// Rule ByProperty
ruleByProperty 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getByPropertyAccess().getGroup()); }
		(rule__ByProperty__Group__0)
		{ after(grammarAccess.getByPropertyAccess().getGroup()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

// Entry rule entryRuleType
entryRuleType
:
{ before(grammarAccess.getTypeRule()); }
	 ruleType
{ after(grammarAccess.getTypeRule()); } 
	 EOF 
;

// Rule Type
ruleType 
	@init {
		int stackSize = keepStackSize();
	}
	:
	(
		{ before(grammarAccess.getTypeAccess().getAlternatives()); }
		(rule__Type__Alternatives)
		{ after(grammarAccess.getTypeAccess().getAlternatives()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__RetAlternatives_2_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getRetTrueKeyword_2_0_0()); }
		'true'
		{ after(grammarAccess.getProgramAccess().getRetTrueKeyword_2_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getProgramAccess().getRetFalseKeyword_2_0_1()); }
		'false'
		{ after(grammarAccess.getProgramAccess().getRetFalseKeyword_2_0_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Alternatives_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getInstructionAccess().getGoParserRuleCall_0_0()); }
		ruleGo
		{ after(grammarAccess.getInstructionAccess().getGoParserRuleCall_0_0()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getVerifyParserRuleCall_0_1()); }
		ruleVerify
		{ after(grammarAccess.getInstructionAccess().getVerifyParserRuleCall_0_1()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getClickParserRuleCall_0_2()); }
		ruleClick
		{ after(grammarAccess.getInstructionAccess().getClickParserRuleCall_0_2()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getFillTextParserRuleCall_0_3()); }
		ruleFillText
		{ after(grammarAccess.getInstructionAccess().getFillTextParserRuleCall_0_3()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getCheckParserRuleCall_0_4()); }
		ruleCheck
		{ after(grammarAccess.getInstructionAccess().getCheckParserRuleCall_0_4()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getSelectComboParserRuleCall_0_5()); }
		ruleSelectCombo
		{ after(grammarAccess.getInstructionAccess().getSelectComboParserRuleCall_0_5()); }
	)
	|
	(
		{ before(grammarAccess.getInstructionAccess().getVariableParserRuleCall_0_6()); }
		ruleVariable
		{ after(grammarAccess.getInstructionAccess().getVariableParserRuleCall_0_6()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerifyAccess().getPageKeyword_1_0()); }
		'page'
		{ after(grammarAccess.getVerifyAccess().getPageKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getVerifyAccess().getElemAssignment_1_1()); }
		(rule__Verify__ElemAssignment_1_1)
		{ after(grammarAccess.getVerifyAccess().getElemAssignment_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerifyAccess().getTextAssignment_3_0()); }
		(rule__Verify__TextAssignment_3_0)
		{ after(grammarAccess.getVerifyAccess().getTextAssignment_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getVerifyAccess().getGroup_3_1()); }
		(rule__Verify__Group_3_1__0)
		{ after(grammarAccess.getVerifyAccess().getGroup_3_1()); }
	)
	|
	(
		{ before(grammarAccess.getVerifyAccess().getElementAssignment_3_2()); }
		(rule__Verify__ElementAssignment_3_2)
		{ after(grammarAccess.getVerifyAccess().getElementAssignment_3_2()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillText__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFillTextAccess().getTextAssignment_1_0()); }
		(rule__FillText__TextAssignment_1_0)
		{ after(grammarAccess.getFillTextAccess().getTextAssignment_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getFillTextAccess().getGroup_1_1()); }
		(rule__FillText__Group_1_1__0)
		{ after(grammarAccess.getFillTextAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Alternatives_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getTextKeyword_3_0()); }
		'text'
		{ after(grammarAccess.getVariableAccess().getTextKeyword_3_0()); }
	)
	|
	(
		{ before(grammarAccess.getVariableAccess().getGroup_3_1()); }
		(rule__Variable__Group_3_1__0)
		{ after(grammarAccess.getVariableAccess().getGroup_3_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Alternatives_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckAccess().getAllKeyword_1_0()); }
		'all'
		{ after(grammarAccess.getCheckAccess().getAllKeyword_1_0()); }
	)
	|
	(
		{ before(grammarAccess.getCheckAccess().getGroup_1_1()); }
		(rule__Check__Group_1_1__0)
		{ after(grammarAccess.getCheckAccess().getGroup_1_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Alternatives_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckAccess().getOnKeyword_2_0()); }
		'on'
		{ after(grammarAccess.getCheckAccess().getOnKeyword_2_0()); }
	)
	|
	(
		{ before(grammarAccess.getCheckAccess().getOffKeyword_2_1()); }
		'off'
		{ after(grammarAccess.getCheckAccess().getOffKeyword_2_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Alternatives_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getTargetAssignment_4_0()); }
		(rule__Element__TargetAssignment_4_0)
		{ after(grammarAccess.getElementAccess().getTargetAssignment_4_0()); }
	)
	|
	(
		{ before(grammarAccess.getElementAccess().getGroup_4_1()); }
		(rule__Element__Group_4_1__0)
		{ after(grammarAccess.getElementAccess().getGroup_4_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__By__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getByAccess().getTextKeyword_0()); }
		'text='
		{ after(grammarAccess.getByAccess().getTextKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getByAccess().getByPropertyParserRuleCall_1()); }
		ruleByProperty
		{ after(grammarAccess.getByAccess().getByPropertyParserRuleCall_1()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Type__Alternatives
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getTypeAccess().getImageKeyword_0()); }
		'image'
		{ after(grammarAccess.getTypeAccess().getImageKeyword_0()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getLinkKeyword_1()); }
		'link'
		{ after(grammarAccess.getTypeAccess().getLinkKeyword_1()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getButtonKeyword_2()); }
		'button'
		{ after(grammarAccess.getTypeAccess().getButtonKeyword_2()); }
	)
	|
	(
		{ before(grammarAccess.getTypeAccess().getAnythingKeyword_3()); }
		'anything'
		{ after(grammarAccess.getTypeAccess().getAnythingKeyword_3()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__0__Impl
	rule__Program__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getNameAssignment_0()); }
	(rule__Program__NameAssignment_0)
	{ after(grammarAccess.getProgramAccess().getNameAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__1__Impl
	rule__Program__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getReturnsKeyword_1()); }
	'returns'
	{ after(grammarAccess.getProgramAccess().getReturnsKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__2__Impl
	rule__Program__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getRetAssignment_2()); }
	(rule__Program__RetAssignment_2)
	{ after(grammarAccess.getProgramAccess().getRetAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__3__Impl
	rule__Program__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_3()); }
	'{'
	{ after(grammarAccess.getProgramAccess().getLeftCurlyBracketKeyword_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__4__Impl
	rule__Program__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getOpenKeyword_4()); }
	'open;'
	{ after(grammarAccess.getProgramAccess().getOpenKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__5__Impl
	rule__Program__Group__6
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getInsAssignment_5()); }
	(rule__Program__InsAssignment_5)*
	{ after(grammarAccess.getProgramAccess().getInsAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__6
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Program__Group__6__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__Group__6__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_6()); }
	'}'
	{ after(grammarAccess.getProgramAccess().getRightCurlyBracketKeyword_6()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Instruction__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group__0__Impl
	rule__Instruction__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getAlternatives_0()); }
	(rule__Instruction__Alternatives_0)
	{ after(grammarAccess.getInstructionAccess().getAlternatives_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Instruction__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Instruction__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getInstructionAccess().getSemicolonKeyword_1()); }
	';'
	{ after(grammarAccess.getInstructionAccess().getSemicolonKeyword_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Go__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Go__Group__0__Impl
	rule__Go__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Go__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoAccess().getGotoKeyword_0()); }
	'goto:'
	{ after(grammarAccess.getGoAccess().getGotoKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Go__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Go__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Go__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getGoAccess().getUrlAssignment_1()); }
	(rule__Go__UrlAssignment_1)
	{ after(grammarAccess.getGoAccess().getUrlAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Verify__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group__0__Impl
	rule__Verify__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getVerifyKeyword_0()); }
	'verify:'
	{ after(grammarAccess.getVerifyAccess().getVerifyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group__1__Impl
	rule__Verify__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getAlternatives_1()); }
	(rule__Verify__Alternatives_1)
	{ after(grammarAccess.getVerifyAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group__2__Impl
	rule__Verify__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getContainsKeyword_2()); }
	'contains'
	{ after(grammarAccess.getVerifyAccess().getContainsKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group__3__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getAlternatives_3()); }
	(rule__Verify__Alternatives_3)
	{ after(grammarAccess.getVerifyAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Verify__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group_3_1__0__Impl
	rule__Verify__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getLeftSquareBracketKeyword_3_1_0()); }
	'['
	{ after(grammarAccess.getVerifyAccess().getLeftSquareBracketKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group_3_1__1__Impl
	rule__Verify__Group_3_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getVarAssignment_3_1_1()); }
	(rule__Verify__VarAssignment_3_1_1)
	{ after(grammarAccess.getVerifyAccess().getVarAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group_3_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Verify__Group_3_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__Group_3_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVerifyAccess().getRightSquareBracketKeyword_3_1_2()); }
	']'
	{ after(grammarAccess.getVerifyAccess().getRightSquareBracketKeyword_3_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FillText__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillText__Group__0__Impl
	rule__FillText__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FillText__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillTextAccess().getFillKeyword_0()); }
	'fill:'
	{ after(grammarAccess.getFillTextAccess().getFillKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillText__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillText__Group__1__Impl
	rule__FillText__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FillText__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillTextAccess().getAlternatives_1()); }
	(rule__FillText__Alternatives_1)
	{ after(grammarAccess.getFillTextAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillText__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillText__Group__2__Impl
	rule__FillText__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__FillText__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillTextAccess().getInKeyword_2()); }
	'in'
	{ after(grammarAccess.getFillTextAccess().getInKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillText__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillText__Group__3__Impl
	rule__FillText__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__FillText__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillTextAccess().getPropAssignment_3()); }
	(rule__FillText__PropAssignment_3)
	{ after(grammarAccess.getFillTextAccess().getPropAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillText__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillText__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FillText__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillTextAccess().getTargetAssignment_4()); }
	(rule__FillText__TargetAssignment_4)
	{ after(grammarAccess.getFillTextAccess().getTargetAssignment_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__FillText__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillText__Group_1_1__0__Impl
	rule__FillText__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__FillText__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillTextAccess().getLeftSquareBracketKeyword_1_1_0()); }
	'['
	{ after(grammarAccess.getFillTextAccess().getLeftSquareBracketKeyword_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillText__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillText__Group_1_1__1__Impl
	rule__FillText__Group_1_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__FillText__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillTextAccess().getVarAssignment_1_1_1()); }
	(rule__FillText__VarAssignment_1_1_1)
	{ after(grammarAccess.getFillTextAccess().getVarAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillText__Group_1_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__FillText__Group_1_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__FillText__Group_1_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getFillTextAccess().getRightSquareBracketKeyword_1_1_2()); }
	']'
	{ after(grammarAccess.getFillTextAccess().getRightSquareBracketKeyword_1_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__0__Impl
	rule__Variable__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getVarKeyword_0()); }
	'var'
	{ after(grammarAccess.getVariableAccess().getVarKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__1__Impl
	rule__Variable__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getNameAssignment_1()); }
	(rule__Variable__NameAssignment_1)
	{ after(grammarAccess.getVariableAccess().getNameAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__2__Impl
	rule__Variable__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getVariableAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__3__Impl
	rule__Variable__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getAlternatives_3()); }
	(rule__Variable__Alternatives_3)
	{ after(grammarAccess.getVariableAccess().getAlternatives_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__4__Impl
	rule__Variable__Group__5
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getOfKeyword_4()); }
	'of'
	{ after(grammarAccess.getVariableAccess().getOfKeyword_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__5
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group__5__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group__5__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getElemAssignment_5()); }
	(rule__Variable__ElemAssignment_5)
	{ after(grammarAccess.getVariableAccess().getElemAssignment_5()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Variable__Group_3_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_3_1__0__Impl
	rule__Variable__Group_3_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_3_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getPropertyKeyword_3_1_0()); }
	'property'
	{ after(grammarAccess.getVariableAccess().getPropertyKeyword_3_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_3_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Variable__Group_3_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__Group_3_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getVariableAccess().getAttrAssignment_3_1_1()); }
	(rule__Variable__AttrAssignment_3_1_1)
	{ after(grammarAccess.getVariableAccess().getAttrAssignment_3_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Click__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Click__Group__0__Impl
	rule__Click__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClickAccess().getClickKeyword_0()); }
	'click:'
	{ after(grammarAccess.getClickAccess().getClickKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Click__Group__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Click__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getClickAccess().getElementParserRuleCall_1()); }
	ruleElement
	{ after(grammarAccess.getClickAccess().getElementParserRuleCall_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Check__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check__Group__0__Impl
	rule__Check__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckAccess().getCheckKeyword_0()); }
	'check:'
	{ after(grammarAccess.getCheckAccess().getCheckKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check__Group__1__Impl
	rule__Check__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckAccess().getAlternatives_1()); }
	(rule__Check__Alternatives_1)
	{ after(grammarAccess.getCheckAccess().getAlternatives_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckAccess().getAlternatives_2()); }
	(rule__Check__Alternatives_2)
	{ after(grammarAccess.getCheckAccess().getAlternatives_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Check__Group_1_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check__Group_1_1__0__Impl
	rule__Check__Group_1_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group_1_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckAccess().getByAssignment_1_1_0()); }
	(rule__Check__ByAssignment_1_1_0)
	{ after(grammarAccess.getCheckAccess().getByAssignment_1_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group_1_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Check__Group_1_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__Group_1_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getCheckAccess().getTargetAssignment_1_1_1()); }
	(rule__Check__TargetAssignment_1_1_1)
	{ after(grammarAccess.getCheckAccess().getTargetAssignment_1_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__SelectCombo__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectCombo__Group__0__Impl
	rule__SelectCombo__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCombo__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectComboAccess().getSelectComboKeyword_0()); }
	'select-combo:'
	{ after(grammarAccess.getSelectComboAccess().getSelectComboKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCombo__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectCombo__Group__1__Impl
	rule__SelectCombo__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCombo__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectComboAccess().getByAssignment_1()); }
	(rule__SelectCombo__ByAssignment_1)
	{ after(grammarAccess.getSelectComboAccess().getByAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCombo__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__SelectCombo__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCombo__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getSelectComboAccess().getTargetAssignment_2()); }
	(rule__SelectCombo__TargetAssignment_2)
	{ after(grammarAccess.getSelectComboAccess().getTargetAssignment_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__0__Impl
	rule__Element__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getTypeAssignment_0()); }
	(rule__Element__TypeAssignment_0)?
	{ after(grammarAccess.getElementAccess().getTypeAssignment_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__1__Impl
	rule__Element__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getGroup_1()); }
	(rule__Element__Group_1__0)?
	{ after(grammarAccess.getElementAccess().getGroup_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__2__Impl
	rule__Element__Group__3
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getWhereKeyword_2()); }
	'where'
	{ after(grammarAccess.getElementAccess().getWhereKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__3
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__3__Impl
	rule__Element__Group__4
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__3__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getSelectorAssignment_3()); }
	(rule__Element__SelectorAssignment_3)
	{ after(grammarAccess.getElementAccess().getSelectorAssignment_3()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__4
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group__4__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group__4__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getAlternatives_4()); }
	(rule__Element__Alternatives_4)
	{ after(grammarAccess.getElementAccess().getAlternatives_4()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_1__0__Impl
	rule__Element__Group_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getNKeyword_1_0()); }
	'n\u00B0'
	{ after(grammarAccess.getElementAccess().getNKeyword_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_1__1__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getNumberAssignment_1_1()); }
	(rule__Element__NumberAssignment_1_1)
	{ after(grammarAccess.getElementAccess().getNumberAssignment_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Element__Group_4_1__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_4_1__0__Impl
	rule__Element__Group_4_1__1
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_4_1__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getLeftSquareBracketKeyword_4_1_0()); }
	'['
	{ after(grammarAccess.getElementAccess().getLeftSquareBracketKeyword_4_1_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_4_1__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_4_1__1__Impl
	rule__Element__Group_4_1__2
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_4_1__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getVarAssignment_4_1_1()); }
	(rule__Element__VarAssignment_4_1_1)
	{ after(grammarAccess.getElementAccess().getVarAssignment_4_1_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_4_1__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__Element__Group_4_1__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__Group_4_1__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getElementAccess().getRightSquareBracketKeyword_4_1_2()); }
	']'
	{ after(grammarAccess.getElementAccess().getRightSquareBracketKeyword_4_1_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__ByProperty__Group__0
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ByProperty__Group__0__Impl
	rule__ByProperty__Group__1
;
finally {
	restoreStackSize(stackSize);
}

rule__ByProperty__Group__0__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getByPropertyAccess().getPropertyKeyword_0()); }
	'property'
	{ after(grammarAccess.getByPropertyAccess().getPropertyKeyword_0()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ByProperty__Group__1
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ByProperty__Group__1__Impl
	rule__ByProperty__Group__2
;
finally {
	restoreStackSize(stackSize);
}

rule__ByProperty__Group__1__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getByPropertyAccess().getPropertyAssignment_1()); }
	(rule__ByProperty__PropertyAssignment_1)
	{ after(grammarAccess.getByPropertyAccess().getPropertyAssignment_1()); }
)
;
finally {
	restoreStackSize(stackSize);
}

rule__ByProperty__Group__2
	@init {
		int stackSize = keepStackSize();
	}
:
	rule__ByProperty__Group__2__Impl
;
finally {
	restoreStackSize(stackSize);
}

rule__ByProperty__Group__2__Impl
	@init {
		int stackSize = keepStackSize();
	}
:
(
	{ before(grammarAccess.getByPropertyAccess().getEqualsSignKeyword_2()); }
	'='
	{ after(grammarAccess.getByPropertyAccess().getEqualsSignKeyword_2()); }
)
;
finally {
	restoreStackSize(stackSize);
}


rule__Global__ProgramsAssignment
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGlobalAccess().getProgramsProgramParserRuleCall_0()); }
		ruleProgram
		{ after(grammarAccess.getGlobalAccess().getProgramsProgramParserRuleCall_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__NameAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_0_0()); }
		RULE_ID
		{ after(grammarAccess.getProgramAccess().getNameIDTerminalRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__RetAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getRetAlternatives_2_0()); }
		(rule__Program__RetAlternatives_2_0)
		{ after(grammarAccess.getProgramAccess().getRetAlternatives_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Program__InsAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getProgramAccess().getInsInstructionParserRuleCall_5_0()); }
		ruleInstruction
		{ after(grammarAccess.getProgramAccess().getInsInstructionParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Go__UrlAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getGoAccess().getUrlSTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getGoAccess().getUrlSTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__ElemAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerifyAccess().getElemElementParserRuleCall_1_1_0()); }
		ruleElement
		{ after(grammarAccess.getVerifyAccess().getElemElementParserRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__TextAssignment_3_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerifyAccess().getTextSTRINGTerminalRuleCall_3_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getVerifyAccess().getTextSTRINGTerminalRuleCall_3_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__VarAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerifyAccess().getVarVariableCrossReference_3_1_1_0()); }
		(
			{ before(grammarAccess.getVerifyAccess().getVarVariableIDTerminalRuleCall_3_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getVerifyAccess().getVarVariableIDTerminalRuleCall_3_1_1_0_1()); }
		)
		{ after(grammarAccess.getVerifyAccess().getVarVariableCrossReference_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Verify__ElementAssignment_3_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVerifyAccess().getElementElementParserRuleCall_3_2_0()); }
		ruleElement
		{ after(grammarAccess.getVerifyAccess().getElementElementParserRuleCall_3_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillText__TextAssignment_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFillTextAccess().getTextSTRINGTerminalRuleCall_1_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getFillTextAccess().getTextSTRINGTerminalRuleCall_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillText__VarAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFillTextAccess().getVarVariableCrossReference_1_1_1_0()); }
		(
			{ before(grammarAccess.getFillTextAccess().getVarVariableIDTerminalRuleCall_1_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getFillTextAccess().getVarVariableIDTerminalRuleCall_1_1_1_0_1()); }
		)
		{ after(grammarAccess.getFillTextAccess().getVarVariableCrossReference_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillText__PropAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFillTextAccess().getPropByPropertyParserRuleCall_3_0()); }
		ruleByProperty
		{ after(grammarAccess.getFillTextAccess().getPropByPropertyParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__FillText__TargetAssignment_4
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getFillTextAccess().getTargetSTRINGTerminalRuleCall_4_0()); }
		RULE_STRING
		{ after(grammarAccess.getFillTextAccess().getTargetSTRINGTerminalRuleCall_4_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__NameAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
		RULE_ID
		{ after(grammarAccess.getVariableAccess().getNameIDTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__AttrAssignment_3_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getAttrSTRINGTerminalRuleCall_3_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getVariableAccess().getAttrSTRINGTerminalRuleCall_3_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Variable__ElemAssignment_5
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getVariableAccess().getElemElementParserRuleCall_5_0()); }
		ruleElement
		{ after(grammarAccess.getVariableAccess().getElemElementParserRuleCall_5_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__ByAssignment_1_1_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckAccess().getByByParserRuleCall_1_1_0_0()); }
		ruleBy
		{ after(grammarAccess.getCheckAccess().getByByParserRuleCall_1_1_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Check__TargetAssignment_1_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getCheckAccess().getTargetSTRINGTerminalRuleCall_1_1_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getCheckAccess().getTargetSTRINGTerminalRuleCall_1_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCombo__ByAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectComboAccess().getByByParserRuleCall_1_0()); }
		ruleBy
		{ after(grammarAccess.getSelectComboAccess().getByByParserRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__SelectCombo__TargetAssignment_2
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getSelectComboAccess().getTargetSTRINGTerminalRuleCall_2_0()); }
		RULE_STRING
		{ after(grammarAccess.getSelectComboAccess().getTargetSTRINGTerminalRuleCall_2_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__TypeAssignment_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getTypeTypeParserRuleCall_0_0()); }
		ruleType
		{ after(grammarAccess.getElementAccess().getTypeTypeParserRuleCall_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__NumberAssignment_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getNumberINTTerminalRuleCall_1_1_0()); }
		RULE_INT
		{ after(grammarAccess.getElementAccess().getNumberINTTerminalRuleCall_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__SelectorAssignment_3
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getSelectorByParserRuleCall_3_0()); }
		ruleBy
		{ after(grammarAccess.getElementAccess().getSelectorByParserRuleCall_3_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__TargetAssignment_4_0
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getTargetSTRINGTerminalRuleCall_4_0_0()); }
		RULE_STRING
		{ after(grammarAccess.getElementAccess().getTargetSTRINGTerminalRuleCall_4_0_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__Element__VarAssignment_4_1_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getElementAccess().getVarVariableCrossReference_4_1_1_0()); }
		(
			{ before(grammarAccess.getElementAccess().getVarVariableIDTerminalRuleCall_4_1_1_0_1()); }
			RULE_ID
			{ after(grammarAccess.getElementAccess().getVarVariableIDTerminalRuleCall_4_1_1_0_1()); }
		)
		{ after(grammarAccess.getElementAccess().getVarVariableCrossReference_4_1_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

rule__ByProperty__PropertyAssignment_1
	@init {
		int stackSize = keepStackSize();
	}
:
	(
		{ before(grammarAccess.getByPropertyAccess().getPropertySTRINGTerminalRuleCall_1_0()); }
		RULE_STRING
		{ after(grammarAccess.getByPropertyAccess().getPropertySTRINGTerminalRuleCall_1_0()); }
	)
;
finally {
	restoreStackSize(stackSize);
}

RULE_ID : '^'? ('a'..'z'|'A'..'Z'|'_') ('a'..'z'|'A'..'Z'|'_'|'0'..'9')*;

RULE_INT : ('0'..'9')+;

RULE_STRING : ('"' ('\\' .|~(('\\'|'"')))* '"'|'\'' ('\\' .|~(('\\'|'\'')))* '\'');

RULE_ML_COMMENT : '/*' ( options {greedy=false;} : . )*'*/';

RULE_SL_COMMENT : '//' ~(('\n'|'\r'))* ('\r'? '\n')?;

RULE_WS : (' '|'\t'|'\r'|'\n')+;

RULE_ANY_OTHER : .;
